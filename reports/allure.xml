<?xml version="1.0" encoding="utf-8"?>
<testsuites>
    <testsuite errors="0" failures="1" hostname="DESKTOP-1P6J1IS" name="pytest" skipped="0" tests="8" time="5.505"
               timestamp="2020-03-19T22:58:51.352594">
        <testcase classname="cases.test_01_register.TestRegister" file="cases\test_01_register.py" line="23"
                  name="test_register[obj0]" time="0.994">
            <system-err>2020-03-19 22:58:53,105 - my_interface_test - [test_01_register.py--&gt;line:41] - INFO:
                用例正确格式的数据注册成功执行通过
            </system-err>
        </testcase>
        <testcase classname="cases.test_01_register.TestRegister" file="cases\test_01_register.py" line="23"
                  name="test_register[obj1]" time="0.466">
            <system-err>2020-03-19 22:58:53,572 - my_interface_test - [test_01_register.py--&gt;line:41] - INFO:
                用例密码为空执行通过
            </system-err>
        </testcase>
        <testcase classname="cases.test_01_register.TestRegister" file="cases\test_01_register.py" line="23"
                  name="test_register[obj2]" time="0.505">
            <system-err>2020-03-19 22:58:54,078 - my_interface_test - [test_01_register.py--&gt;line:41] - INFO:
                用例密码少于8位执行通过
            </system-err>
        </testcase>
        <testcase classname="cases.test_01_register.TestRegister" file="cases\test_01_register.py" line="23"
                  name="test_register[obj3]" time="0.566">
            <system-err>2020-03-19 22:58:54,626 - my_interface_test - [test_01_register.py--&gt;line:41] - INFO:
                用例密码大于16位执行通过
            </system-err>
        </testcase>
        <testcase classname="cases.test_01_register.TestRegister" file="cases\test_01_register.py" line="23"
                  name="test_register[obj4]" time="0.174">
            <system-err>2020-03-19 22:58:54,819 - my_interface_test - [test_01_register.py--&gt;line:41] - INFO:
                用例手机号为空执行通过
            </system-err>
        </testcase>
        <testcase classname="cases.test_01_register.TestRegister" file="cases\test_01_register.py" line="23"
                  name="test_register[obj5]" time="0.145">
            <system-err>2020-03-19 22:58:54,965 - my_interface_test - [test_01_register.py--&gt;line:41] - INFO:
                用例手机号密码均为空执行通过
            </system-err>
        </testcase>
        <testcase classname="cases.test_01_register.TestRegister" file="cases\test_01_register.py" line="23"
                  name="test_register[obj6]" time="0.167">
            <system-err>2020-03-19 22:58:55,131 - my_interface_test - [test_01_register.py--&gt;line:41] - INFO:
                用例手机号输入为空格执行通过
            </system-err>
        </testcase>
        <testcase classname="cases.test_01_register.TestRegister" file="cases\test_01_register.py" line="23"
                  name="test_register[obj7]" time="0.622">
            <failure message="AssertionError: assert [2, &apos;无效的手机格式&apos;] == [2, &apos;密码格式为8到16位&apos;]
  At index 1 diff: &apos;无效的手机格式&apos; != &apos;密码格式为8到16位&apos;
  Use -v to get the full diff">self = &lt;test_01_register.TestRegister object at 0x000000D2740600B8&gt;
                set_up = (&lt;scripts.handle_request.HandleRequest object at 0x000000D27409F5C0&gt;, &lt;scripts.handle_mysql.HandleMysql
                object at 0x000000D27423B128&gt;, &lt;scripts.handle_conf.HandleYaml object at 0x000000D2745FB160&gt;)
                obj = &lt;scripts.handle_excel.obj object at 0x000000D27403ACF8&gt;

                @pytest.mark.parametrize(&apos;obj&apos;, list_obj)
                def test_register(self, set_up, obj):
                url = hy.read_yaml(&apos;excel&apos;, &apos;base_url&apos;) + obj.url
                request_data = HandleRe.get_data(data=obj.data)
                result = set_up[0].send(url=url, data=request_data)
                try:
                assert [obj.expected, obj.msg] == [result.json()[&apos;code&apos;], result.json()[&apos;msg&apos;]]
                if obj.caseId == 1:
                phone = result.json()[&apos;data&apos;][&apos;mobile_phone&apos;]
                mysql_result = set_up[1].get_mysql_result(hy.read_yaml(&apos;mysql&apos;, &apos;sql&apos;), args=phone)
                assert mysql_result is not None
                except AssertionError as e:
                self.he.write_excel(rowid=int(obj.caseId)+1, colid=7, sheet_value=&apos;fail&apos;)
                logger.error(e)
                &gt; raise e

                cases\test_01_register.py:38:
                _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

                self = &lt;test_01_register.TestRegister object at 0x000000D2740600B8&gt;
                set_up = (&lt;scripts.handle_request.HandleRequest object at 0x000000D27409F5C0&gt;, &lt;scripts.handle_mysql.HandleMysql
                object at 0x000000D27423B128&gt;, &lt;scripts.handle_conf.HandleYaml object at 0x000000D2745FB160&gt;)
                obj = &lt;scripts.handle_excel.obj object at 0x000000D27403ACF8&gt;

                @pytest.mark.parametrize(&apos;obj&apos;, list_obj)
                def test_register(self, set_up, obj):
                url = hy.read_yaml(&apos;excel&apos;, &apos;base_url&apos;) + obj.url
                request_data = HandleRe.get_data(data=obj.data)
                result = set_up[0].send(url=url, data=request_data)
                try:
                &gt; assert [obj.expected, obj.msg] == [result.json()[&apos;code&apos;], result.json()[&apos;msg&apos;]]
                E AssertionError: assert [2, &apos;无效的手机格式&apos;] == [2, &apos;密码格式为8到16位&apos;]
                E At index 1 diff: &apos;无效的手机格式&apos; != &apos;密码格式为8到16位&apos;
                E Use -v to get the full diff

                cases\test_01_register.py:30: AssertionError
            </failure>
            <system-err>2020-03-19 22:58:55,302 - my_interface_test - [test_01_register.py--&gt;line:37] - ERROR: assert
                [2, &apos;无效的手机格式&apos;] == [2, &apos;密码格式为8到16位&apos;]
                At index 1 diff: &apos;无效的手机格式&apos; != &apos;密码格式为8到16位&apos;
                Use -v to get the full diff
                2020-03-19 22:58:56,810 - my_interface_test - [test_01_register.py--&gt;line:37] - ERROR: assert [2,
                &apos;无效的手机格式&apos;] == [2, &apos;密码格式为8到16位&apos;]
                At index 1 diff: &apos;无效的手机格式&apos; != &apos;密码格式为8到16位&apos;
                Use -v to get the full diff
            </system-err>
        </testcase>
    </testsuite>
</testsuites>